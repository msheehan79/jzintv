##############################################################################
## Source-level Makefile for jzintv
##
## The whole make process is driven from the top-level Makefile.  In contrast
## to the (poor) advice given in the Make documentation, I do _not_ call make
## recursively to build the source of this project.
##############################################################################

##############################################################################
## Project directory structure
##############################################################################
B=../bin
L=../lib
R=../rom

##############################################################################
## Project-wide build flags
##############################################################################
P           = export PATH;

SVN_REV := $(shell (svn info -R || :) | grep "Last Changed Rev:" | cut -d' ' -f4 | sort -n | tail -1)
SVN_DTY := $(shell echo `(svn status || :) | grep -v '^?' | wc -l`)

SDL_CFLAGS := $(shell sdl-config --cflags)
SDL_LFLAGS := $(shell sdl-config --libs) 

# Set "X" to be the executable extension, and "O" to be the object extension.
X =        
O = o

# Set "RM" to be the remove/delete command
RM = rm -f 

 WARN    = -Wall -W -Wshadow -Wpointer-arith 				\
	       -Wbad-function-cast -Wcast-qual -Wc++-compat		\
		   -Wmissing-declarations -Wmissing-prototypes 		\
		   -Wstrict-prototypes
 WARNXX  = -Wall -W -Wshadow -Wpointer-arith -Wcast-qual 


#WARN    = -W -Wall -ansi -Wbad-function-cast -Wcast-align \
		   -Wcast-qual -Wchar-subscripts -Winline \
		   -Wmissing-prototypes -Wnested-externs -Wpointer-arith \
		   -Wshadow -Wstrict-prototypes -Wwrite-strings \
	   -Dlinux

#WARNXX  = -W -Wall -ansi -Wcast-align \
 		   -Wcast-qual -Wchar-subscripts -Winline \
 		   -Wpointer-arith -Wredundant-decls -Wshadow -Wwrite-strings \
 	   -Dlinux


 CC  = $(P) gcc -std=c99 #-mtune=arm6
 CXX = $(P) g++ -std=c++1y #-mtune=arm6

 DEF_FLAGS += -Dlinux

#OPT_FLAGS = -ggdb3
#OPT_FLAGS = -O
#OPT_FLAGS = -O2 -ggdb3
 OPT_FLAGS = -flto -ggdb3 -O6 -fomit-frame-pointer #-DBENCHMARK_STIC
 OPT_FLAGS += -funswitch-loops -fvisibility=hidden
#OPT_FLAGS = -ggdb3 -O6 -fomit-frame-pointer #-DBENCHMARK_STIC
CFLAGS   = $(OPT_FLAGS) $(WARN)   -I. -I.. $(DEF_FLAGS) $(EXTRA)
CXXFLAGS = $(OPT_FLAGS) $(WARNXX) -I. -I.. $(DEF_FLAGS) $(EXTRA)
LFLAGS   = -static-libstdc++ -static-libgcc -L../lib -lrt

CFLAGS  += -ffunction-sections -fdata-sections

OBJS      = jzintv.$(O)
PROG_SDL  = $(B)/jzintv
PROG_NULL = $(B)/jzintv_batch
TOCLEAN  += $(PROG_SDL)
TOCLEAN  += $(PROG_NULL)
TOCLEAN  += core

#PROGS=$(PROG)

CFLAGS += $(SDL_CFLAGS) 
#LFLAGS += $(SDL_LFLAGS)

##############################################################################
## Generic build-rules
##############################################################################

all: $(OBJS) $(OBJS_SDL) $(OBJS_NULL) $(PROG_SDL) $(PROG_NULL)

$(PROG_SDL): $(OBJS) $(OBJS_SDL) svn_revision.$(O)
	$(CXX) -o $(PROG_SDL) $(OBJS) $(OBJS_SDL) svn_revision.$(O) $(CFLAGS) $(SDL_LFLAGS) $(LFLAGS)

$(PROG_NULL): $(OBJS) $(OBJS_NULL)
	$(CXX) -o $(PROG_NULL) $(OBJS) $(OBJS_NULL) svn_revision.$(O) $(CFLAGS) -static $(LFLAGS)

clean:
	$(RM) $(OBJS) 
	$(RM) $(OBJS_SDL) 
	$(RM) $(OBJS_NULL) 
	$(RM) $(TOCLEAN)

%.$(O): %.c
	$(CC) -o $@ $(CFLAGS) -c $<

%.s: %.c
	$(CC) -fverbose-asm -S -o $@ $(CFLAGS) -c $<

##############################################################################
## Linux-specific stuff
##############################################################################

pads/pads_intv2pc.$(O):
	$(CC) -O6 -o pads/pads_intv2pc.$(O) $(CFLAGS) -c pads/pads_intv2pc.c

OBJS_SDL += pads/pads_cgc_linux.$(O)
OBJS += pads/pads_intv2pc.$(O)

##############################################################################
## Makefile.common includes all the subMakefiles and such
##############################################################################
include Makefile.common
build: jzIntv SDK-1600
